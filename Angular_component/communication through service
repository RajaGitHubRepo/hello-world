
We can use service as a storing machanism to store data or state
there it can communicate that state to other components.

What is state means ? 

Several techniques to manage and store state :
 there are many machanism to track the state: 
   1. Property bag - They are just bags of properties 
   2. Angulars built in change detection
   3. statemanagment with notifications - like subject, behaviour subject (subjects are way to provide notifications when
   we can not leverage the angulars built in change detection) to communicate state changes.
   4. NgRx/Redux -> powerful state management library (Ngrx provides well defined pattern and techniques for 
   handling complex stete through out an application.But it requires lot of configuration and coding for maintenence. 
   

Property bag service : 
    component communicates to it self
    component communicates to other componenet 
    
    Example : suppose our list page has search button, when user performs the search, and navigate to the details page. and when comes
    back again to the list page, the serch criteria is lost. 
    
    when moving from one component to antother component, teh first component is destoryed, and new component being displayed in
    initilased, when we go back to the first component , the componenet is being re initialised again. 
    
    to save the state , we can use servivcie to store the state, when it is being destored.
    we can think of this as a bag of properties of values.
    
    We use setters to store those values in service properties ...that way the service holds the values even though
    the component gets destroyed. when the component re initialised it used the getters to get the values from the 
    service. 
    
    We can also use property bag (Service ) to commuinicate between the components.
    
    

Service scope and lifetime :  when we create a service, we regiester them in a module or commponent (providers array).
which to use when ? IF you regisger a serivce on a component (the service is available for it and its children) and 
the service is avaialbe only when the component is loaded, when the component is destroeyd, the service is also not available.
