Static Types:
-------------
in plane javascript you can not define a specific type like string, number or date etc.
but in typescrip you can define

name: string
age?: number  // We can use the question mart to define as a optional propery, so when an object 
                  // of type cat is created , the compiler will not complain about it.
DoB: dateTime 

Interfaces:
------------

interface  Icat 
{
  name: string
  age: number
  DoB: dateTime 

}

let fluffy :ICat 
fluffy = new 
{
  name = 'Fluffy'
  age = '7'        // Errors out - Because age is declared not a number.
}

Typescript Class Properties:
----------------------------

in a plane javascript you don't need to declare properites and it' types while declaring a class. 

in typescript you can declare 

class cat 
{
  name : string  // You can make class more explict by declaring the property in Typescript 
                 // actually this name:string is not required in plane javascript. 
  colour         // If we don't define the type, the compiler will not complain about the type safety. 
  
  constructor(name)
  { 
      this.name = name
  }
} 

Public and Private accessiblity:
---------------------------------

// class members are public by default in ES-2015 and Typescript 
class cat 
{
 Private  name : string                  
 Private  colour() {console.log('Myname is this.name')}       
  
  constructor(name)
  { 
      this.name = name
  }
} 

let fluffy = new Cat() 
console.log(fluffy.name) // compile time error - you can not access because those are private
fluffy.speak() // Compile time error - you can not access because those are private.

